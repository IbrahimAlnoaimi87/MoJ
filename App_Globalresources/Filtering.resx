<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddConditionTooltip" xml:space="preserve">
    <value>Add new condition</value>
    <comment>Condition refers to a logical condition eg. "is a value greater than X", "is a value equal to X"</comment>
  </data>
  <data name="AddExpressionTooltip" xml:space="preserve">
    <value>Add new expression</value>
  </data>
  <data name="AddFilterText" xml:space="preserve">
    <value>Add new filter criteria</value>
  </data>
  <data name="AddOrderText" xml:space="preserve">
    <value>Add new sort criteria</value>
  </data>
  <data name="UnclosedParenthesisValidationMessage" xml:space="preserve">
    <value>One or more parentheses are not properly closed.</value>
  </data>
  <data name="AdvancedFilterText" xml:space="preserve">
    <value>Configure advanced filter criteria</value>
  </data>
  <data name="ConditionalFormattingValidationNameEmptyMessage" xml:space="preserve">
    <value>Please specify a name for the condition</value>
    <comment>Condition refers to a logical condition eg. "is a value greater than X", "is a value equal to X"</comment>
  </data>
  <data name="ConditionalFormattingValidationNameEmptyTitle" xml:space="preserve">
    <value>Blank condition name</value>
  </data>
  <data name="ConditionsValidationEmptyMessage" xml:space="preserve">
    <value>Please configure a condition</value>
  </data>
  <data name="ConditionsValidationEmptyTitle" xml:space="preserve">
    <value>Empty condition</value>
  </data>
  <data name="ConditionsValidationMessage" xml:space="preserve">
    <value>Please supply values for empty operands</value>
  </data>
  <data name="ConditionsValidationTitle" xml:space="preserve">
    <value>Complete all fields</value>
  </data>
  <data name="ConditionWidgetRemoveNotificationHeader" xml:space="preserve">
    <value>Remove Condition</value>
  </data>
  <data name="ConditionWidgetRemoveNotificationText" xml:space="preserve">
    <value>Are you sure you want to remove this condition?</value>
  </data>
  <data name="FilterWidgetContextHeading" xml:space="preserve">
    <value>Context Browser</value>
    <comment>This is the heading on the Context Browser sidebar [location: context browser] [runtime]</comment>
  </data>
  <data name="FilterWidgetPopupHeading" xml:space="preserve">
    <value>Advanced Filter Configuration</value>
    <comment>This is the title of a page where the user can configure advanced filters</comment>
  </data>
  <data name="FilterWidgetTargetHeading" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="MoveDownOrderText" xml:space="preserve">
    <value>Move selected sort criteria down</value>
  </data>
  <data name="MoveUpOrderText" xml:space="preserve">
    <value>Move selected sort criteria up</value>
  </data>
  <data name="RemoveAllFilterText" xml:space="preserve">
    <value>Remove all filter criteria</value>
  </data>
  <data name="RemoveAllOrderText" xml:space="preserve">
    <value>Remove all sort criteria</value>
  </data>
  <data name="RemoveConditionTooltip" xml:space="preserve">
    <value>Remove selected condition</value>
  </data>
  <data name="RemoveExpressionTooltip" xml:space="preserve">
    <value>Remove expression</value>
  </data>
  <data name="RemoveFilterText" xml:space="preserve">
    <value>Remove seleted filter criteria</value>
  </data>
  <data name="RemoveOrderText" xml:space="preserve">
    <value>Remove seleted sort criteria</value>
  </data>
  <data name="RulesWizardPopupHeader" xml:space="preserve">
    <value>Rule Designer</value>
    <comment>this is the title of the Rule Designer pop up which allows users to create events conditions and actions [designtime]</comment>
  </data>
  <data name="RuntimeFilterHeaderAddNewFilter" xml:space="preserve">
    <value>Add New Filter</value>
    <comment>this is the title of a section where a user can configure a filter for a list of items [location: listview filter settings pop up] [runtime]</comment>
  </data>
  <data name="RuntimeFilterHeaderEditFilter" xml:space="preserve">
    <value>Edit Filter</value>
  </data>
  <data name="DefaultStyleName" xml:space="preserve">
    <value>(Default)</value>
  </data>
  <data name="DefaultFilterText" xml:space="preserve">
    <value>Default</value>
    <comment>This is an option which appears on the dropdown menu when filtering a list and indicates the the default filter is selected [location: ListView Filter] [runtime]</comment>
  </data>
  <data name="InvalidFilter" xml:space="preserve">
    <value>The filtering configuration for this action is not valid.</value>
    <comment>This message will popup if you have an invalid filter for example if you change the smartobject of a control where you had previously set a filter</comment>
  </data>
  <data name="InvalidOrder" xml:space="preserve">
    <value>The sorting configuration for this action is not valid.</value>
    <comment>This message will popup if you have a invalid sorting for example if you change the smartobject of a control where you had previously set a sort order</comment>
  </data>
  <data name="InvalidCondition" xml:space="preserve">
    <value>The condition configuration is not valid.</value>
    <comment>This message will popup if you have an invalid condition for example if you change the smartobject of a control where you had previously set a filter</comment>
  </data>
</root>
